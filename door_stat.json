[
    {
        "id": "14af7ba089484013",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0202285c8f8b504",
        "type": "firebase-get",
        "z": "14af7ba089484013",
        "name": "GET door_status",
        "constraint": {},
        "database": "a14529af611d0593",
        "outputType": "auto",
        "passThrough": false,
        "path": "door_status",
        "pathType": "str",
        "useConstraint": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "b54e6ed5989b983a"
            ]
        ]
    },
    {
        "id": "6f7341756d672eed",
        "type": "debug",
        "z": "14af7ba089484013",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "3bd4e5aea30e262b",
        "type": "inject",
        "z": "14af7ba089484013",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "c0202285c8f8b504"
            ]
        ]
    },
    {
        "id": "413725719be58687",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "GET door_user",
        "func": "let statuses = flow.get(\"door_statuses\");\nconst users = Array.from(\n    new Set(statuses.map(stat => stat.username))\n).sort();\nmsg.options = users;\nflow.set(\"users\", users);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "a12b3a3360326c9b"
            ]
        ]
    },
    {
        "id": "efad2d5ab3ee0174",
        "type": "ui_date_picker",
        "z": "14af7ba089484013",
        "name": "Door_date",
        "label": "Date for door status",
        "group": "509a730cb12568ae",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "door_date",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "8ed1d911ac4cae60"
            ]
        ]
    },
    {
        "id": "8edbd17872b9c213",
        "type": "ui_dropdown",
        "z": "14af7ba089484013",
        "name": "Door_action",
        "label": "Action",
        "tooltip": "",
        "place": "Action",
        "group": "509a730cb12568ae",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Lock",
                "value": "close",
                "type": "str"
            },
            {
                "label": "Unlock",
                "value": "open",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_action",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "6fd0f311e51f40d9"
            ]
        ]
    },
    {
        "id": "a12b3a3360326c9b",
        "type": "ui_dropdown",
        "z": "14af7ba089484013",
        "name": "Door_user",
        "label": "User",
        "tooltip": "",
        "place": "User",
        "group": "509a730cb12568ae",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_user",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "4db5f135e106d1fc"
            ]
        ]
    },
    {
        "id": "b54e6ed5989b983a",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "Filter door_status",
        "func": "let data = msg.payload;\nlet max_entries = 10;\nlet statuses = [];\n\nfor (let stat in data)\n    if (max_entries-- && data.hasOwnProperty(stat))\n        statuses.push(data[stat]);\n\nflow.set(\"door_statuses\", statuses);\nflow.set(\"door_actions\", []);\nflow.set(\"door_users\", []);\nmsg.payload = statuses;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "49352bb37403db74",
        "type": "ui_template",
        "z": "14af7ba089484013",
        "group": "509a730cb12568ae",
        "name": "Door status table",
        "order": 4,
        "width": 8,
        "height": 5,
        "format": "<table>\n    <tr>\n        <th>Time</th>\n        <th>Action</th>\n        <th>User</th>\n    </tr>\n    <tr ng-repeat=\"stat in msg.payload | orderBy:'time':true\">\n        <td>{{stat.time}}</td>\n        <td>{{stat.status}}</td>\n        <td>{{stat.username}}</td>\n    </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "4db5f135e106d1fc",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "Filter door_user",
        "func": "// let users = msg.payload\n// if (!users.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => users.includes(stat.username));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_users\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b089c1c071cd38c1",
        "type": "complete",
        "z": "14af7ba089484013",
        "name": "",
        "scope": [
            "b54e6ed5989b983a"
        ],
        "uncaught": false,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "413725719be58687"
            ]
        ]
    },
    {
        "id": "c7821a1086d35358",
        "type": "complete",
        "z": "14af7ba089484013",
        "name": "",
        "scope": [
            "b54e6ed5989b983a",
            "4db5f135e106d1fc",
            "6fd0f311e51f40d9",
            "8ed1d911ac4cae60"
        ],
        "uncaught": false,
        "x": 110,
        "y": 300,
        "wires": [
            [
                "0831593fe3382c11"
            ]
        ]
    },
    {
        "id": "0831593fe3382c11",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "Filter display_statuses",
        "func": "let ddate = flow.get(\"door_date\");\nlet actions = flow.get(\"door_actions\");\nlet users = flow.get(\"door_users\");\nif (!actions.length) actions = [\"close\", \"open\"];\nif (!users.length) users = flow.get(\"users\");\nlet statuses = flow.get(\"door_statuses\");\nmsg.payload = statuses.filter(stat =>\n    ddate == stat.time.split(',')[0]\n    && actions.includes(stat.status)\n    && users.includes(stat.username));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "49352bb37403db74"
            ]
        ]
    },
    {
        "id": "6fd0f311e51f40d9",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "Filter door_action",
        "func": "// let actions = msg.payload\n// if (!actions.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => actions.includes(stat.status));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_actions\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8ed1d911ac4cae60",
        "type": "function",
        "z": "14af7ba089484013",
        "name": "Filter door_date",
        "func": "if (!msg.payload) msg.payload = Date.now();\nlet ddate = new Date(msg.payload).toLocaleString();\nddate = ddate.split(',')[0];\nmsg.payload = ddate;\nflow.set(\"door_date\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a14529af611d0593",
        "type": "database-config",
        "name": "Node-Red Database",
        "authType": "email",
        "claims": {},
        "createUser": true,
        "useClaims": false
    },
    {
        "id": "509a730cb12568ae",
        "type": "ui_group",
        "name": "Door Status",
        "tab": "a2cde38270e59c21",
        "order": 1,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2cde38270e59c21",
        "type": "ui_tab",
        "name": "Data",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]