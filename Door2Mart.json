[
    {
        "id": "01a8f56dc3f304a5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "241dd79a15bebea1",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7466a849aa8b0cd2",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a6acb84c648ac42",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "732c6ba564cc905c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1eea47fd.237178",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43c4dff4.b9d28",
        "type": "mqtt-broker",
        "name": "HiveMQ Public Broker",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "18136a764050f740",
        "type": "ui_group",
        "name": "SignUp",
        "tab": "1eea47fd.237178",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f4a7bf2f8fb4aa18",
        "type": "ui_group",
        "name": "Sensor_Data",
        "tab": "1eea47fd.237178",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a14529af611d0593",
        "type": "database-config",
        "name": "Node-Red Database",
        "authType": "email",
        "claims": {},
        "createUser": false,
        "useClaims": false
    },
    {
        "id": "af47a8e89b7c507f",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "eaba383d5f81daf1",
        "type": "ui_group",
        "name": "Infomation",
        "tab": "1eea47fd.237178",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ed463184a3e93e3",
        "type": "ui_group",
        "name": "UserInfo",
        "tab": "1eea47fd.237178",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6943afb2c79c690",
        "type": "ui_group",
        "name": "Control",
        "tab": "1eea47fd.237178",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5649307edcf222c",
        "type": "ui_group",
        "name": "LogIn",
        "tab": "1eea47fd.237178",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "Signin",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "History",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a2cde38270e59c21",
        "type": "ui_tab",
        "name": "Data",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "509a730cb12568ae",
        "type": "ui_group",
        "name": "Data",
        "tab": "a2cde38270e59c21",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "305d27c48b016a55",
        "type": "telegram bot",
        "botname": "Door2MART-bot",
        "usernames": "",
        "chatids": "-1001652896051",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "bf6b235abb37a1ca",
        "type": "ui_form",
        "z": "01a8f56dc3f304a5",
        "name": "Log In",
        "label": "",
        "group": "f5649307edcf222c",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 70,
        "y": 240,
        "wires": [
            [
                "890d63b310bfa76d",
                "ab1558600b11ee46"
            ]
        ]
    },
    {
        "id": "e0c91a6f0351b057",
        "type": "switch",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 260,
        "wires": [
            [],
            [
                "1808947ac9da3162"
            ]
        ]
    },
    {
        "id": "7e91ad62b7ca3b0a",
        "type": "ui_ui_control",
        "z": "01a8f56dc3f304a5",
        "name": "Go to Data Group",
        "events": "all",
        "x": 1250,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1808947ac9da3162",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Handle success login",
        "func": "msg.payload = {\n    group : {\n        \"show\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Data_Data\"],\n        \"hide\": [\"Dashboard_SignUp\", \"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "7e91ad62b7ca3b0a",
                "21dac5ada8513382"
            ]
        ]
    },
    {
        "id": "21dac5ada8513382",
        "type": "debug",
        "z": "01a8f56dc3f304a5",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 280,
        "wires": []
    },
    {
        "id": "7c271e645b94d4ec",
        "type": "ui_ui_control",
        "z": "01a8f56dc3f304a5",
        "name": "Reset Login Group",
        "events": "all",
        "x": 530,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ddaa344562802356",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "To Login",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_SignUp\", \"Data_Data\"],\n        \"show\": [\"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 480,
        "wires": [
            [
                "7c271e645b94d4ec"
            ]
        ]
    },
    {
        "id": "3db0ff5c53daa806",
        "type": "ui_button",
        "z": "01a8f56dc3f304a5",
        "name": "Log Out",
        "group": "1ed463184a3e93e3",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log Out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "msg",
        "x": 80,
        "y": 480,
        "wires": [
            [
                "ddaa344562802356"
            ]
        ]
    },
    {
        "id": "ec2e72a7344b8cf5",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Get current time",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\nmsg.payload = nd.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 620,
        "wires": [
            [
                "d82bca96f20841d7"
            ]
        ]
    },
    {
        "id": "d82bca96f20841d7",
        "type": "ui_text",
        "z": "01a8f56dc3f304a5",
        "group": "1ed463184a3e93e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Login time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 510,
        "y": 620,
        "wires": []
    },
    {
        "id": "925cb6b65b37198c",
        "type": "ui_form",
        "z": "01a8f56dc3f304a5",
        "name": "Sign Up",
        "label": "",
        "group": "18136a764050f740",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Confirm password",
                "value": "password2",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "email": "",
            "password": "",
            "password2": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "c13a37e1f36a9e61",
                "7378251d1930bb18"
            ]
        ]
    },
    {
        "id": "9e0108d5a8c0c68a",
        "type": "firebase-out",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "database": "a14529af611d0593",
        "path": "users",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "c13a37e1f36a9e61",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Check sync password",
        "func": "if(msg.payload.password == msg.payload.password2) {\n    msg.payload = 1;\n    \n    if (msg.payload.password != \"\") {\n        global.set(\"password\", msg.payload.password);\n    }\n}\nelse {\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "cac8f2d697e5429f"
            ]
        ]
    },
    {
        "id": "cac8f2d697e5429f",
        "type": "switch",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "5e3c0748504fe964"
            ],
            [
                "f4001cb198c76222",
                "556de8dba2e7ce88"
            ]
        ]
    },
    {
        "id": "f4001cb198c76222",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Get data",
        "func": "msg.payload = {\n    username: global.get(\"username\"),\n    password: global.get(\"password\"),\n    email: global.get(\"email\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 120,
        "wires": [
            [
                "9e0108d5a8c0c68a"
            ]
        ]
    },
    {
        "id": "7378251d1930bb18",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Store user data",
        "func": "if (msg.payload.username != \"\" && msg.payload.password != \"\") {\n    global.set(\"username\", msg.payload.username);\n    global.set(\"password\", msg.payload.password);\n    global.set(\"email\", msg.payload.email);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ab1558600b11ee46",
        "type": "firebase-get",
        "z": "01a8f56dc3f304a5",
        "name": "GET users",
        "constraint": {},
        "database": "a14529af611d0593",
        "outputType": "auto",
        "passThrough": false,
        "path": "users",
        "pathType": "str",
        "useConstraint": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "40abf8ca1f358daa"
            ]
        ]
    },
    {
        "id": "40abf8ca1f358daa",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Filter JSON data",
        "func": "var data = msg.payload;\nvar users = [];\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        users.push(propValue);\n    }\n}\n\nmsg.payload = users;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "0d01097c9ced12f9"
            ]
        ]
    },
    {
        "id": "0d01097c9ced12f9",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Check valid",
        "func": "var data = msg.payload;\n\nvar username_value = global.get(\"username_value\");\nvar password_value = global.get(\"password_value\");\n\nfor(var i = 0; i < data.length; i++) {\n    if(data[i].username == username_value && data[i].password == password_value) {\n        msg.payload = 1;\n        return msg;\n    }\n}\n\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "e0c91a6f0351b057"
            ]
        ]
    },
    {
        "id": "890d63b310bfa76d",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Store log in data",
        "func": "if (msg.payload.username != \"\" && msg.payload.password != \"\") {\n    global.set(\"username_value\", msg.payload.username);\n    global.set(\"password_value\", msg.payload.password);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3c0748504fe964",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Fail notification",
        "func": "msg.payload = \"Cannot create user account\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 20,
        "wires": [
            [
                "21f3a8ebe198700d"
            ]
        ]
    },
    {
        "id": "21f3a8ebe198700d",
        "type": "ui_text",
        "z": "01a8f56dc3f304a5",
        "group": "18136a764050f740",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Response",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 20,
        "wires": []
    },
    {
        "id": "bdbeba6e7d947384",
        "type": "ui_ui_control",
        "z": "01a8f56dc3f304a5",
        "name": "Sign Up",
        "events": "all",
        "x": 500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8399a5965a7d641f",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "To Sign Up",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_LogIn\"],\n        \"show\": [\"Dashboard_SignUp\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 360,
        "wires": [
            [
                "bdbeba6e7d947384"
            ]
        ]
    },
    {
        "id": "26d526696ac6e228",
        "type": "ui_button",
        "z": "01a8f56dc3f304a5",
        "name": "SignUp Button",
        "group": "f5649307edcf222c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create an account",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "msg",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "8399a5965a7d641f"
            ]
        ]
    },
    {
        "id": "3f48902300d26d0e",
        "type": "ui_ui_control",
        "z": "01a8f56dc3f304a5",
        "name": "Login",
        "events": "all",
        "x": 490,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5c2448a54e76a3b3",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "To Login",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_SignUp\"],\n        \"show\": [\"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "3f48902300d26d0e"
            ]
        ]
    },
    {
        "id": "4f93750b108636f3",
        "type": "ui_button",
        "z": "01a8f56dc3f304a5",
        "name": "LogIn Button",
        "group": "18136a764050f740",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "msg",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "5c2448a54e76a3b3"
            ]
        ]
    },
    {
        "id": "556de8dba2e7ce88",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Success notification",
        "func": "msg.payload = \"Create user account successfully\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 60,
        "wires": [
            [
                "21f3a8ebe198700d"
            ]
        ]
    },
    {
        "id": "1aa6fc6d235b2f41",
        "type": "complete",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "scope": [
            "1808947ac9da3162"
        ],
        "uncaught": false,
        "x": 90,
        "y": 640,
        "wires": [
            [
                "ec2e72a7344b8cf5",
                "3f3b02b0787425af"
            ]
        ]
    },
    {
        "id": "3f3b02b0787425af",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Get user name",
        "func": "msg.payload = global.get(\"username_value\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 680,
        "wires": [
            [
                "ae2f6837f9dedd58"
            ]
        ]
    },
    {
        "id": "ae2f6837f9dedd58",
        "type": "ui_text",
        "z": "01a8f56dc3f304a5",
        "group": "1ed463184a3e93e3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "User",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 490,
        "y": 680,
        "wires": []
    },
    {
        "id": "ea77be719b7a8fb6",
        "type": "http request",
        "z": "01a8f56dc3f304a5",
        "name": "Call API Open Weather",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.openweathermap.org/data/2.5/weather?q=hanoi&appid=abc8cffe1911b1ec8e2d6a1db4e3e3a6&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 760,
        "wires": [
            [
                "22259f4297280d7c",
                "b65a4f05fc308cae",
                "824f57730bfc2ae5",
                "6f842829e86c3f3d"
            ]
        ]
    },
    {
        "id": "22259f4297280d7c",
        "type": "ui_text",
        "z": "01a8f56dc3f304a5",
        "group": "eaba383d5f81daf1",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Weather",
        "format": "{{msg.payload.weather[0].main}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 820,
        "wires": []
    },
    {
        "id": "b65a4f05fc308cae",
        "type": "ui_gauge",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "group": "eaba383d5f81daf1",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload.main.temp}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 630,
        "y": 880,
        "wires": []
    },
    {
        "id": "824f57730bfc2ae5",
        "type": "ui_gauge",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "group": "eaba383d5f81daf1",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "wave",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload.main.humidity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 620,
        "y": 940,
        "wires": []
    },
    {
        "id": "a94dd2b06070a50e",
        "type": "ui_text",
        "z": "01a8f56dc3f304a5",
        "group": "eaba383d5f81daf1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload.curTime}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "6f842829e86c3f3d",
        "type": "function",
        "z": "01a8f56dc3f304a5",
        "name": "Convert timestamp",
        "func": "var timestamp = msg.payload.dt;\nvar date = new Date(timestamp * 1000);\nvar hanoiTimezoneOffset = 25200; \nvar hanoiTime = new Date(date.getTime() + hanoiTimezoneOffset * 1000);\nvar formattedHanoiTime = hanoiTime.toLocaleString();\nmsg.payload.curTime = formattedHanoiTime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "a94dd2b06070a50e"
            ]
        ]
    },
    {
        "id": "aa8516b2e96d34d3",
        "type": "complete",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "scope": [
            "1808947ac9da3162"
        ],
        "uncaught": false,
        "x": 90,
        "y": 760,
        "wires": [
            [
                "ea77be719b7a8fb6"
            ]
        ]
    },
    {
        "id": "3786b7d7240baead",
        "type": "inject",
        "z": "01a8f56dc3f304a5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "ddaa344562802356"
            ]
        ]
    },
    {
        "id": "e652c60bab29cc4d",
        "type": "mqtt in",
        "z": "241dd79a15bebea1",
        "name": "",
        "topic": "21CLC05N02/INFO",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "732c6ba564cc905c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "8ca2a9c310130f86",
                "b98ecc5d93f04927"
            ]
        ]
    },
    {
        "id": "3c57f1e9c84aea94",
        "type": "debug",
        "z": "241dd79a15bebea1",
        "name": "Debug MQTT Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "7e0bfad37f777dbd",
        "type": "ui_gauge",
        "z": "241dd79a15bebea1",
        "name": "",
        "group": "f4a7bf2f8fb4aa18",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload[1]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "8ca2a9c310130f86",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Filter data",
        "func": "var filter_data = msg.payload.split(\",\");\nmsg.payload = filter_data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "3c57f1e9c84aea94",
                "7e0bfad37f777dbd",
                "88efbab73fad2d34",
                "0539cef2395a1a29",
                "66c7b3034b08d9b6",
                "10890b4c7ab78c8a"
            ]
        ]
    },
    {
        "id": "88efbab73fad2d34",
        "type": "ui_gauge",
        "z": "241dd79a15bebea1",
        "name": "",
        "group": "f4a7bf2f8fb4aa18",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload[0]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "abe53c9c63903bbb",
        "type": "ui_switch",
        "z": "241dd79a15bebea1",
        "name": "",
        "label": "Locked/Unlocked",
        "tooltip": "",
        "group": "a6943afb2c79c690",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "6c83bbbd161bc844",
                "8512318b0aa55332"
            ]
        ]
    },
    {
        "id": "f3969748193e8670",
        "type": "mqtt out",
        "z": "241dd79a15bebea1",
        "name": "",
        "topic": "21CLC05N02/BUZZER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "732c6ba564cc905c",
        "x": 410,
        "y": 720,
        "wires": []
    },
    {
        "id": "6c83bbbd161bc844",
        "type": "switch",
        "z": "241dd79a15bebea1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 520,
        "wires": [
            [
                "d07177a0e31ba5c1"
            ],
            [
                "fd435c4f58cb2b3e"
            ]
        ]
    },
    {
        "id": "a81ae6fecae843b8",
        "type": "firebase-out",
        "z": "241dd79a15bebea1",
        "name": "",
        "database": "a14529af611d0593",
        "path": "door_status",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "d07177a0e31ba5c1",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Get data for open door",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\n\nmsg.payload = {\n    username: global.get(\"username_value\"),\n    status: \"open\",\n    time: nd.toLocaleString()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "a81ae6fecae843b8"
            ]
        ]
    },
    {
        "id": "fd435c4f58cb2b3e",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Get data for close door",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\n\nmsg.payload = {\n    username: global.get(\"username_value\"),\n    status: \"close\",\n    time: nd.toLocaleString()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "695c647c2b753ffc"
            ]
        ]
    },
    {
        "id": "695c647c2b753ffc",
        "type": "firebase-out",
        "z": "241dd79a15bebea1",
        "name": "",
        "database": "a14529af611d0593",
        "path": "door_status",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "748910b287d38ab7",
        "type": "ui_switch",
        "z": "241dd79a15bebea1",
        "name": "",
        "label": "Turn On/Off Buzzer",
        "tooltip": "",
        "group": "a6943afb2c79c690",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "f3969748193e8670"
            ]
        ]
    },
    {
        "id": "8512318b0aa55332",
        "type": "mqtt out",
        "z": "241dd79a15bebea1",
        "name": "",
        "topic": "21CLC05N02/LOCK",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "732c6ba564cc905c",
        "x": 400,
        "y": 640,
        "wires": []
    },
    {
        "id": "10890b4c7ab78c8a",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Warn temperature",
        "func": "let temp = msg.payload[0];\n//let warning_status = flow.get(\"warning_status\");\nif (temp > 70) {\n    msg.payload = {\n        \"type\": \"message\",\n        \"chatId\": \"-1001652896051\",\n        \"content\": `Temperature is TOO HIGH!\n        Going over ${temp} ℃!`\n    };\n    //flow.set(warning_status, 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "30e2109c10ccd555"
            ]
        ]
    },
    {
        "id": "30e2109c10ccd555",
        "type": "telegram sender",
        "z": "241dd79a15bebea1",
        "name": "Send to Door2MART bot",
        "bot": "305d27c48b016a55",
        "haserroroutput": false,
        "outputs": 1,
        "x": 910,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "66c7b3034b08d9b6",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Warn stranger",
        "func": "const low_hour = 22, high_hour = 5;\nconst pir_state = msg.payload[2];\n//let warning_status = flow.get(\"warning_status\");\nif (pir_state === '0') return msg;\n\nlet curr = new Date();\nlet curr_date = curr.toLocaleString().split(', ')[0];\n\nlet start = low_hour, end = high_hour;\nif (low_hour > 12) start = `${start - 12}:00:00 PM`;\nelse start += ':00:00 AM';\nstart = `${curr_date}, ${start}`\nif (high_hour > 12) end = `${end - 12}:00:00 PM`;\nelse end += ':00:00 AM';\nif (low_hour > high_hour) {\n    curr_date = new Date(curr.getTime());\n    curr_date.setDate(curr_date.getDate() + 1);\n    curr_date = curr_date.toLocaleString().split(', ')[0];\n}\nend = `${curr_date}, ${end}`;\n\nif (new Date(start).getTime() <= curr.getTime()\n    && curr.getTime() <= new Date(end).getTime()) {\n    msg.payload = {\n        \"type\": \"message\",\n        \"chatId\": \"-1001652896051\",\n        \"content\": `ALERT! Stranger's at the door!\n        Currently ${curr.toLocaleString()}!`\n    };\n    //flow.set(\"warning_status\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "30e2109c10ccd555"
            ]
        ]
    },
    {
        "id": "0764fec4896404fc",
        "type": "e-mail",
        "z": "241dd79a15bebea1",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send to emails",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "5caf6bd5e9dc1cb9",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Warn stranger (Email)",
        "func": "const low_hour = 9, high_hour = 11;\nconst emails = flow.get(\"emails\");\nconst pir_state = msg.payload[2];\nlet warning_status = flow.get(\"warning_status\");\n\nif (pir_state === '0') return msg;\n\nlet curr = new Date();\nlet curr_date = curr.toLocaleString().split(', ')[0];\n\nlet start = low_hour, end = high_hour;\nif (low_hour > 12) start = `${start - 12}:00:00 PM`;\nelse start += ':00:00 AM';\nstart = `${curr_date}, ${start}`\nif (high_hour > 12) end = `${end - 12}:00:00 PM`;\nelse end += ':00:00 AM';\nif (low_hour > high_hour) {\n    curr_date = new Date(curr.getTime());\n    curr_date.setDate(curr_date.getDate() + 1);\n    curr_date = curr_date.toLocaleString().split(', ')[0];\n}\nend = `${curr_date}, ${end}`;\n\nif (warning_status == 1\n    && new Date(start).getTime() <= curr.getTime()\n    && curr.getTime() <= new Date(end).getTime()) {\n    msg = {\n        payload: `ALERT! Stranger's at the door!\n        Currently ${curr.toLocaleString()}!`,\n        topic: \"ALERT STRANGER!\",\n        to: emails\n    };\n    flow.set(\"warning_status\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "0764fec4896404fc"
            ]
        ]
    },
    {
        "id": "b98ecc5d93f04927",
        "type": "firebase-get",
        "z": "241dd79a15bebea1",
        "name": "GET users",
        "constraint": {},
        "database": "a14529af611d0593",
        "outputType": "auto",
        "passThrough": false,
        "path": "users",
        "pathType": "str",
        "useConstraint": false,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "dde412dbeffd9d06"
            ]
        ]
    },
    {
        "id": "dde412dbeffd9d06",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Filter emails",
        "func": "var data = msg.payload;\nvar emails = [];\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        if (propValue.email.length > 0)\n            emails.push(propValue.email);\n    }\n}\n\nflow.set(\"emails\", emails.join(', '));\nmsg.payload = flow.get(\"emails\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e9e1efc2416d9909",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Warn temperature (Email)",
        "func": "let temp = msg.payload[0];\nlet emails = flow.get(\"emails\");\nlet warning_status = flow.get(\"warning_status\");\nif (temp > 70 && warning_status == 1) {\n    msg = {\n        payload: `Temperature is TOO HIGH!\n        Going over ${temp} ℃!`,\n        topic: \"ALERT TEMPERATURE!\",\n        to: emails\n    };\n    flow.set(\"warning_status\", 0);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "0764fec4896404fc"
            ]
        ]
    },
    {
        "id": "c59c91e63ddd90af",
        "type": "function",
        "z": "241dd79a15bebea1",
        "name": "Set delay time",
        "func": "flow.set(\"warning_status\", 1);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0539cef2395a1a29",
        "type": "switch",
        "z": "241dd79a15bebea1",
        "name": "",
        "property": "warning_status",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e9e1efc2416d9909",
                "5caf6bd5e9dc1cb9"
            ],
            []
        ]
    },
    {
        "id": "9a2325c67470e251",
        "type": "inject",
        "z": "241dd79a15bebea1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "c59c91e63ddd90af"
            ]
        ]
    },
    {
        "id": "a05d9c72f1aeedba",
        "type": "firebase-get",
        "z": "7466a849aa8b0cd2",
        "name": "GET door_status",
        "constraint": {},
        "database": "a14529af611d0593",
        "outputType": "auto",
        "passThrough": false,
        "path": "door_status",
        "pathType": "str",
        "useConstraint": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "96bdfca6ddc6bcd3"
            ]
        ]
    },
    {
        "id": "b60f688a24ad4ba2",
        "type": "debug",
        "z": "7466a849aa8b0cd2",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 120,
        "wires": []
    },
    {
        "id": "be6200b79356e9a5",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "GET door_user",
        "func": "let statuses = flow.get(\"door_statuses\");\nconst users = Array.from(\n    new Set(statuses.map(stat => stat.username))\n).sort();\nmsg.options = users;\nflow.set(\"users\", users);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "b352bc3ad830e125"
            ]
        ]
    },
    {
        "id": "ad5b6a207dc56ba0",
        "type": "ui_date_picker",
        "z": "7466a849aa8b0cd2",
        "name": "Door_date",
        "label": "Date for door status",
        "group": "509a730cb12568ae",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "door_date",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "e25d744bd5d54d5c"
            ]
        ]
    },
    {
        "id": "f340c943b30a122e",
        "type": "ui_dropdown",
        "z": "7466a849aa8b0cd2",
        "name": "Door_action",
        "label": "Action",
        "tooltip": "",
        "place": "Action",
        "group": "509a730cb12568ae",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Lock",
                "value": "close",
                "type": "str"
            },
            {
                "label": "Unlock",
                "value": "open",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_action",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "17cf70f40a660e4e"
            ]
        ]
    },
    {
        "id": "b352bc3ad830e125",
        "type": "ui_dropdown",
        "z": "7466a849aa8b0cd2",
        "name": "Door_user",
        "label": "User",
        "tooltip": "",
        "place": "User",
        "group": "509a730cb12568ae",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_user",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "eed7f55dd11ea766"
            ]
        ]
    },
    {
        "id": "96bdfca6ddc6bcd3",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "Filter door_status",
        "func": "let data = msg.payload;\nlet max_entries = 10;\nlet statuses = [];\n\nfor (let stat in data)\n    if (max_entries-- && data.hasOwnProperty(stat))\n        statuses.push(data[stat]);\n\nflow.set(\"door_statuses\", statuses);\nflow.set(\"door_actions\", []);\nflow.set(\"door_users\", []);\nmsg.payload = statuses;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7f8cad5e5c1428fe",
        "type": "ui_template",
        "z": "7466a849aa8b0cd2",
        "group": "509a730cb12568ae",
        "name": "Door status table",
        "order": 4,
        "width": 8,
        "height": 5,
        "format": "<table>\n    <tr>\n        <th>Time</th>\n        <th>Action</th>\n        <th>User</th>\n    </tr>\n    <tr ng-repeat=\"stat in msg.payload | orderBy:'time':true\">\n        <td>{{stat.time}}</td>\n        <td>{{stat.status}}</td>\n        <td>{{stat.username}}</td>\n    </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "eed7f55dd11ea766",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "Filter door_user",
        "func": "// let users = msg.payload\n// if (!users.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => users.includes(stat.username));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_users\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "df6c672af42cce94",
        "type": "complete",
        "z": "7466a849aa8b0cd2",
        "name": "",
        "scope": [
            "96bdfca6ddc6bcd3"
        ],
        "uncaught": false,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "be6200b79356e9a5"
            ]
        ]
    },
    {
        "id": "117c089be7673ac1",
        "type": "complete",
        "z": "7466a849aa8b0cd2",
        "name": "",
        "scope": [
            "96bdfca6ddc6bcd3",
            "eed7f55dd11ea766",
            "17cf70f40a660e4e",
            "e25d744bd5d54d5c"
        ],
        "uncaught": false,
        "x": 110,
        "y": 300,
        "wires": [
            [
                "e48b2659b0e34928"
            ]
        ]
    },
    {
        "id": "e48b2659b0e34928",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "Filter display_statuses",
        "func": "let ddate = flow.get(\"door_date\");\nlet actions = flow.get(\"door_actions\");\nlet users = flow.get(\"door_users\");\nif (!actions.length) actions = [\"close\", \"open\"];\nif (!users.length) users = flow.get(\"users\");\nlet statuses = flow.get(\"door_statuses\");\nmsg.payload = statuses.filter(stat =>\n    ddate == stat.time.split(',')[0]\n    && actions.includes(stat.status)\n    && users.includes(stat.username));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "7f8cad5e5c1428fe"
            ]
        ]
    },
    {
        "id": "17cf70f40a660e4e",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "Filter door_action",
        "func": "// let actions = msg.payload\n// if (!actions.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => actions.includes(stat.status));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_actions\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e25d744bd5d54d5c",
        "type": "function",
        "z": "7466a849aa8b0cd2",
        "name": "Filter door_date",
        "func": "if (!msg.payload) msg.payload = Date.now();\nlet ddate = new Date(msg.payload).toLocaleString();\nddate = ddate.split(',')[0];\nmsg.payload = ddate;\nflow.set(\"door_date\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d1e825dc3f468440",
        "type": "ui_button",
        "z": "7466a849aa8b0cd2",
        "name": "Refresh",
        "group": "509a730cb12568ae",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "a05d9c72f1aeedba"
            ]
        ]
    }
]