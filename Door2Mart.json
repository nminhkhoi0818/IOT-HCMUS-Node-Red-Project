[
    {
        "id": "6b2efe3cd5880a7d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "69435a82deadf679",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bb2de6a45f4ff3ce",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "074c92c3891cd836",
        "type": "group",
        "z": "6b2efe3cd5880a7d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "52993c2da6ad4e68",
            "95c4297fad267084",
            "5fc97f6948d308fa",
            "9c6a9024587fb992",
            "9a96ffb0c2b91f05",
            "673b9aa6dadf5686",
            "ef9aa24fc0b75fb8"
        ],
        "x": 34,
        "y": 919,
        "w": 712,
        "h": 222
    },
    {
        "id": "829e829b2ec2e9a3",
        "type": "group",
        "z": "6b2efe3cd5880a7d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "959423fdd083ee3a",
            "5133e9b5cd1b4fa8",
            "45ce0f57461ab8ed",
            "57678de5d7d5eb5b",
            "1f885d753ad77da8",
            "010d7cc7cb4de428",
            "4bcefef1f448b2b9",
            "29d2deeca6bacae9",
            "ae5be908bda65283",
            "70ebb99537931aa3",
            "22a1b2bd045c6660",
            "d9ee0ba0e46e342d",
            "63a6affc3dcff4e9"
        ],
        "x": 34,
        "y": 359,
        "w": 752,
        "h": 382
    },
    {
        "id": "e6acc00a395957a5",
        "type": "group",
        "z": "bb2de6a45f4ff3ce",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ca6e5954d80f45b3",
            "0a16da4a3a3c7405",
            "cc18e4671e2d678e",
            "6d33e670063e8b47",
            "8090d1b38fd1417d",
            "712ddd83c63dc9eb",
            "78790d49c4fda81d",
            "94dbb4d4626b56f6"
        ],
        "x": 14,
        "y": 619,
        "w": 1312,
        "h": 162
    },
    {
        "id": "1b1bcdfabe777721",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "cff180134c4d317c",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e5526a94fe43cfb2",
        "type": "ui_group",
        "name": "SignUp",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5656d4e6b8a179d0",
        "type": "ui_group",
        "name": "Sensor_Data",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99e0db7aa8d02f02",
        "type": "ui_group",
        "name": "Information",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7250621fe61f4418",
        "type": "ui_group",
        "name": "UserInfo",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4e8f1d672568b1d6",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3dbd01f480dd5b0",
        "type": "ui_group",
        "name": "LogIn",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c04de14c1cc7c3a",
        "type": "ui_group",
        "name": "Data",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b590304562214989",
        "type": "ui_group",
        "name": "StrangerAlert",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aaaaa59883f93bcf",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "ab39abef256cbc06",
        "type": "ui_group",
        "name": "Group 8",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": 6
    },
    {
        "id": "f9d3339f6e14e14d",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "c38b652c99769437",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "689a423f6ffe69ed",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5e8d967eed27b471",
        "type": "ui_group",
        "name": "SignUp",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3456811b0d13c289",
        "type": "ui_group",
        "name": "Sensor_Data",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2e2162537772365",
        "type": "ui_group",
        "name": "Infomation",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2129683c7714e650",
        "type": "ui_group",
        "name": "UserInfo",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65b99652f155ee74",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b52c3413a65722e5",
        "type": "ui_group",
        "name": "LogIn",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ebb73ff54738fb0",
        "type": "ui_group",
        "name": "Data",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6f5770c8da91f6be",
        "type": "ui_group",
        "name": "StrangerAlert",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae6d4969bfabe804",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c1116b8569bb0947",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "60dd54dfbbd8697d",
        "type": "ui_group",
        "name": "SignUp",
        "tab": "c1116b8569bb0947",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "56bc4e22f1f9b74c",
        "type": "ui_group",
        "name": "Sensor_Data",
        "tab": "c1116b8569bb0947",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "af63f5a1d62c4c0f",
        "type": "database-config",
        "name": "Node-Red Database",
        "authType": "email",
        "claims": {},
        "createUser": false,
        "useClaims": false
    },
    {
        "id": "2a2f5469748d4a07",
        "type": "ui_group",
        "name": "Infomation",
        "tab": "c1116b8569bb0947",
        "order": 7,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a1bbb80ea881fd5b",
        "type": "ui_group",
        "name": "Control",
        "tab": "c1116b8569bb0947",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "21aa786121622cd4",
        "type": "ui_group",
        "name": "LogIn",
        "tab": "c1116b8569bb0947",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6119a2c87f26413",
        "type": "ui_group",
        "name": "UserInfo",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3769e6e473aff07c",
        "type": "telegram bot",
        "botname": "Door2MART-bot",
        "usernames": "",
        "chatids": "-1001652896051",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "8139ada5ac830901",
        "type": "ui_group",
        "name": "StrangerAlert",
        "tab": "c1116b8569bb0947",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e6c101789a80854",
        "type": "ui_group",
        "name": "MainGroup",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 10,
        "collapse": false
    },
    {
        "id": "9bda9381adf14bbb",
        "type": "ui_group",
        "name": "Masterswitches",
        "tab": "",
        "order": 6,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "51e29e73bae90681",
        "type": "ui_group",
        "name": "Condition",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "a4d0e9d140fe280a",
        "type": "ui_group",
        "name": "Wind",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "dd4824c19b83ed87",
        "type": "ui_group",
        "name": "Luftfeuchtigkeit",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "34496bf3e69bf5cf",
        "type": "ui_group",
        "name": "Condition",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "2",
        "collapse": false
    },
    {
        "id": "8dd6e7370ca8c3ce",
        "type": "ui_group",
        "name": "Forecast",
        "tab": "",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "82f9b9a833c0f77c",
        "type": "ui_tab",
        "name": "UserInfo",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b2e2a35785454e68",
        "type": "ui_group",
        "name": "UserInfo",
        "tab": "82f9b9a833c0f77c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb585a70cdebba93",
        "type": "ui_group",
        "name": "Chart",
        "tab": "82f9b9a833c0f77c",
        "order": 2,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "65fb0d1d1dc1415f",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "1c30c14670d5cf87",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a7020b6de840483",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "366d7b1ec2ab3ea2",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba4ac29d7db2b5b9",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f93bc42cd15aecd1",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "049d5aa98f4c286f",
        "type": "ui_spacer",
        "z": "bb2de6a45f4ff3ce",
        "name": "spacer",
        "group": "fb585a70cdebba93",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b1abd1c497d3d5d",
        "type": "ui_form",
        "z": "6b2efe3cd5880a7d",
        "name": "Log In",
        "label": "",
        "group": "21aa786121622cd4",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 70,
        "y": 240,
        "wires": [
            [
                "dbf37fcd97694430",
                "4c16c0cc8ae90783"
            ]
        ]
    },
    {
        "id": "0b85414c48cb3788",
        "type": "switch",
        "z": "6b2efe3cd5880a7d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 200,
        "wires": [
            [],
            [
                "667ae80c97f86e42"
            ]
        ]
    },
    {
        "id": "35d3094cb89e0347",
        "type": "ui_ui_control",
        "z": "6b2efe3cd5880a7d",
        "name": "Go to Data Group",
        "events": "all",
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "667ae80c97f86e42",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Handle success login",
        "func": "msg.payload = {\n    group : {\n        \"show\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Data_Data\", \"Dashboard_StrangerAlert\"],\n        \"hide\": [\"Dashboard_SignUp\", \"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 280,
        "wires": [
            [
                "35d3094cb89e0347",
                "281f4b8bb5531494"
            ]
        ]
    },
    {
        "id": "281f4b8bb5531494",
        "type": "debug",
        "z": "6b2efe3cd5880a7d",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 240,
        "wires": []
    },
    {
        "id": "84f397e99884574f",
        "type": "ui_form",
        "z": "6b2efe3cd5880a7d",
        "name": "Sign Up",
        "label": "",
        "group": "60dd54dfbbd8697d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Confirm password",
                "value": "password2",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "email": "",
            "password": "",
            "password2": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 80,
        "y": 60,
        "wires": [
            [
                "8f428cab9c12f942",
                "7e7d43508a9402c7"
            ]
        ]
    },
    {
        "id": "25c09524319aef04",
        "type": "firebase-out",
        "z": "6b2efe3cd5880a7d",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "users",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "8f428cab9c12f942",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Check sync password",
        "func": "if(msg.payload.password == msg.payload.password2) {\n    msg.payload = 1;\n    \n    if (msg.payload.password != \"\") {\n        global.set(\"password\", msg.payload.password);\n    }\n}\nelse {\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "fc927b00d8fadc79"
            ]
        ]
    },
    {
        "id": "fc927b00d8fadc79",
        "type": "switch",
        "z": "6b2efe3cd5880a7d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "a94ab59d307d48bc"
            ],
            [
                "cecc4e8d7c53f8fc",
                "f8d2e7db0b6a81a5"
            ]
        ]
    },
    {
        "id": "cecc4e8d7c53f8fc",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Get data",
        "func": "msg.payload = {\n    username: global.get(\"username\"),\n    password: global.get(\"password\"),\n    email: global.get(\"email\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "25c09524319aef04"
            ]
        ]
    },
    {
        "id": "7e7d43508a9402c7",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Store user data",
        "func": "if (msg.payload.username != \"\" && msg.payload.password != \"\") {\n    global.set(\"username\", msg.payload.username);\n    global.set(\"password\", msg.payload.password);\n    global.set(\"email\", msg.payload.email);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4c16c0cc8ae90783",
        "type": "firebase-get",
        "z": "6b2efe3cd5880a7d",
        "name": "GET users",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "users",
        "pathType": "str",
        "useConstraint": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "0994a67460635a80"
            ]
        ]
    },
    {
        "id": "0994a67460635a80",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Filter JSON data",
        "func": "var data = msg.payload;\nvar users = [];\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        users.push(propValue);\n    }\n}\n\nmsg.payload = users;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "11bea4b159102c1a"
            ]
        ]
    },
    {
        "id": "11bea4b159102c1a",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Check valid",
        "func": "var data = msg.payload;\n\nvar username_value = global.get(\"username_value\");\nvar password_value = global.get(\"password_value\");\n\nfor(var i = 0; i < data.length; i++) {\n    if(data[i].username == username_value && data[i].password == password_value) {\n        msg.payload = 1;\n        return msg;\n    }\n}\n\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "0b85414c48cb3788"
            ]
        ]
    },
    {
        "id": "dbf37fcd97694430",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Store log in data",
        "func": "if (msg.payload.username != \"\" && msg.payload.password != \"\") {\n    global.set(\"username_value\", msg.payload.username);\n    global.set(\"password_value\", msg.payload.password);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a94ab59d307d48bc",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Fail notification",
        "func": "msg.payload = \"Cannot create user account\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 20,
        "wires": [
            [
                "dfe1e6ec62f52c32"
            ]
        ]
    },
    {
        "id": "dfe1e6ec62f52c32",
        "type": "ui_text",
        "z": "6b2efe3cd5880a7d",
        "group": "60dd54dfbbd8697d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Response",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 20,
        "wires": []
    },
    {
        "id": "959423fdd083ee3a",
        "type": "ui_ui_control",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "Sign Up",
        "events": "all",
        "x": 600,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5133e9b5cd1b4fa8",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "To Sign Up",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_LogIn\", \"Dashboard_StrangerAlert\"],\n        \"show\": [\"Dashboard_SignUp\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 400,
        "wires": [
            [
                "959423fdd083ee3a"
            ]
        ]
    },
    {
        "id": "45ce0f57461ab8ed",
        "type": "ui_button",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "SignUp Button",
        "group": "21aa786121622cd4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create an account",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "5133e9b5cd1b4fa8",
                "d9ee0ba0e46e342d"
            ]
        ]
    },
    {
        "id": "57678de5d7d5eb5b",
        "type": "ui_ui_control",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "Login",
        "events": "all",
        "x": 590,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "1f885d753ad77da8",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "To Login",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_SignUp\", \"Dashboard_StrangerAlert\"],\n        \"show\": [\"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "57678de5d7d5eb5b"
            ]
        ]
    },
    {
        "id": "010d7cc7cb4de428",
        "type": "ui_button",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "LogIn Button",
        "group": "60dd54dfbbd8697d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "1f885d753ad77da8",
                "22a1b2bd045c6660"
            ]
        ]
    },
    {
        "id": "f8d2e7db0b6a81a5",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Success notification",
        "func": "msg.payload = \"Create user account successfully\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 80,
        "wires": [
            [
                "dfe1e6ec62f52c32"
            ]
        ]
    },
    {
        "id": "b21d6c78fd1efe9c",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Get current time",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\nmsg.payload = nd.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 800,
        "wires": [
            [
                "5624c9544eed82f9"
            ]
        ]
    },
    {
        "id": "5624c9544eed82f9",
        "type": "ui_text",
        "z": "6b2efe3cd5880a7d",
        "group": "b2e2a35785454e68",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Login time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 800,
        "wires": []
    },
    {
        "id": "7cfd56e5303617bc",
        "type": "complete",
        "z": "6b2efe3cd5880a7d",
        "name": "",
        "scope": [
            "667ae80c97f86e42"
        ],
        "uncaught": false,
        "x": 150,
        "y": 820,
        "wires": [
            [
                "b21d6c78fd1efe9c",
                "e50989e39642c486"
            ]
        ]
    },
    {
        "id": "e50989e39642c486",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "name": "Get user name",
        "func": "msg.payload = global.get(\"username_value\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 860,
        "wires": [
            [
                "7f1d655f656aa19b"
            ]
        ]
    },
    {
        "id": "7f1d655f656aa19b",
        "type": "ui_text",
        "z": "6b2efe3cd5880a7d",
        "group": "b2e2a35785454e68",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "User",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 550,
        "y": 860,
        "wires": []
    },
    {
        "id": "4bcefef1f448b2b9",
        "type": "ui_ui_control",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "Reset Login Group",
        "events": "all",
        "x": 670,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "29d2deeca6bacae9",
        "type": "ui_button",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "Log Out",
        "group": "b2e2a35785454e68",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log Out",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "ae5be908bda65283",
                "70ebb99537931aa3",
                "63a6affc3dcff4e9"
            ]
        ]
    },
    {
        "id": "ae5be908bda65283",
        "type": "function",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "To Login",
        "func": "msg.payload = {\n    group: {\n        \"hide\": [\"UserInfo\", \"Dashboard_Control\", \"Dashboard_Infomation\", \"Dashboard_Sensor_Data\", \"Dashboard_UserInfo\", \"Dashboard_SignUp\", \"Data_Data\", \"Dashboard_StrangerAlert\"],\n        \"show\": [\"Dashboard_LogIn\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 620,
        "wires": [
            [
                "4bcefef1f448b2b9"
            ]
        ]
    },
    {
        "id": "70ebb99537931aa3",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 660,
        "wires": [
            [
                "4bcefef1f448b2b9"
            ]
        ]
    },
    {
        "id": "52993c2da6ad4e68",
        "type": "ui_button",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "group": "2a2f5469748d4a07",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "See Your Info",
        "tooltip": "",
        "color": "Black",
        "bgcolor": "Yellow",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 980,
        "wires": [
            [
                "95c4297fad267084",
                "673b9aa6dadf5686"
            ]
        ]
    },
    {
        "id": "95c4297fad267084",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"UserInfo\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1000,
        "wires": [
            [
                "5fc97f6948d308fa"
            ]
        ]
    },
    {
        "id": "5fc97f6948d308fa",
        "type": "ui_ui_control",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "events": "all",
        "x": 660,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "9c6a9024587fb992",
        "type": "ui_button",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "group": "b2e2a35785454e68",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Dashboard",
        "tooltip": "",
        "color": "Black",
        "bgcolor": "Yellow",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "9a96ffb0c2b91f05",
                "ef9aa24fc0b75fb8"
            ]
        ]
    },
    {
        "id": "9a96ffb0c2b91f05",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\": \"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1060,
        "wires": [
            [
                "5fc97f6948d308fa"
            ]
        ]
    },
    {
        "id": "673b9aa6dadf5686",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"show\":[\"UserInfo\"],\"hide\":[\"Dashboard\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 960,
        "wires": [
            [
                "5fc97f6948d308fa"
            ]
        ]
    },
    {
        "id": "ef9aa24fc0b75fb8",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "074c92c3891cd836",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"show\":[\"Dashboard\"],\"hide\":[\"UserInfo\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "5fc97f6948d308fa"
            ]
        ]
    },
    {
        "id": "22a1b2bd045c6660",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"show\":[\"Dashboard\"],\"hide\":[\"UserInfo\"]}}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 560,
        "wires": [
            [
                "57678de5d7d5eb5b"
            ]
        ]
    },
    {
        "id": "d9ee0ba0e46e342d",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"show\":[\"Dashboard\"],\"hide\":[\"UserInfo\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 440,
        "wires": [
            [
                "959423fdd083ee3a"
            ]
        ]
    },
    {
        "id": "63a6affc3dcff4e9",
        "type": "change",
        "z": "6b2efe3cd5880a7d",
        "g": "829e829b2ec2e9a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"show\":[\"Dashboard\"],\"hide\":[\"UserInfo\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 700,
        "wires": [
            [
                "4bcefef1f448b2b9"
            ]
        ]
    },
    {
        "id": "8631124227ab63e4",
        "type": "mqtt in",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/INFO",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ae6d4969bfabe804",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "4d676079597db31c",
                "7d935510a0893683"
            ]
        ]
    },
    {
        "id": "da9648c6ac382674",
        "type": "debug",
        "z": "69435a82deadf679",
        "name": "Debug MQTT Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "b0c70bc784b25088",
        "type": "ui_gauge",
        "z": "69435a82deadf679",
        "name": "",
        "group": "56bc4e22f1f9b74c",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload[1]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "4d676079597db31c",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Filter data",
        "func": "var filter_data = msg.payload.split(\",\");\nmsg.payload = filter_data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "da9648c6ac382674",
                "b0c70bc784b25088",
                "34a9ee13e4404b8f",
                "fb26aeeff08ff698",
                "139ddfcad628c716",
                "1ebf6e4280e7753a"
            ]
        ]
    },
    {
        "id": "34a9ee13e4404b8f",
        "type": "ui_gauge",
        "z": "69435a82deadf679",
        "name": "",
        "group": "56bc4e22f1f9b74c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload[0]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "51975f18f6896c43",
        "type": "ui_switch",
        "z": "69435a82deadf679",
        "name": "",
        "label": "Locked/Unlocked",
        "tooltip": "",
        "group": "a1bbb80ea881fd5b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "92adb089ec8c7170",
                "1c8202a33603a948"
            ]
        ]
    },
    {
        "id": "6cdd7e920d5268b8",
        "type": "mqtt out",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/BUZZER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae6d4969bfabe804",
        "x": 410,
        "y": 720,
        "wires": []
    },
    {
        "id": "92adb089ec8c7170",
        "type": "switch",
        "z": "69435a82deadf679",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 520,
        "wires": [
            [
                "5a225a1c0207e4e0"
            ],
            [
                "68b6f8f85f213949"
            ]
        ]
    },
    {
        "id": "70a0b77961e4c545",
        "type": "firebase-out",
        "z": "69435a82deadf679",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "door_status",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "5a225a1c0207e4e0",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Get data for open door",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\n\nmsg.payload = {\n    username: global.get(\"username_value\"),\n    status: \"open\",\n    time: nd.toLocaleString()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "70a0b77961e4c545"
            ]
        ]
    },
    {
        "id": "68b6f8f85f213949",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Get data for close door",
        "func": "var d = new Date();\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\nvar nd = new Date(utc + (3600000 * 7));\n\nmsg.payload = {\n    username: global.get(\"username_value\"),\n    status: \"close\",\n    time: nd.toLocaleString()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "5aab7f16a6f3a25a"
            ]
        ]
    },
    {
        "id": "5aab7f16a6f3a25a",
        "type": "firebase-out",
        "z": "69435a82deadf679",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "door_status",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "3bf9560cf303726b",
        "type": "ui_switch",
        "z": "69435a82deadf679",
        "name": "",
        "label": "Turn On/Off Buzzer",
        "tooltip": "",
        "group": "a1bbb80ea881fd5b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "6cdd7e920d5268b8"
            ]
        ]
    },
    {
        "id": "1c8202a33603a948",
        "type": "mqtt out",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/LOCK",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae6d4969bfabe804",
        "x": 400,
        "y": 640,
        "wires": []
    },
    {
        "id": "1ebf6e4280e7753a",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Warn temperature",
        "func": "let temp = msg.payload[0];\n//let warning_status = flow.get(\"warning_status\");\nif (temp > 70) {\n    msg.payload = {\n        \"type\": \"message\",\n        \"chatId\": \"-1001652896051\",\n        \"content\": `Temperature is TOO HIGH!\n        Going over ${temp} ℃!`\n    };\n    //flow.set(warning_status, 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "a8dc661bc252f52b"
            ]
        ]
    },
    {
        "id": "a8dc661bc252f52b",
        "type": "telegram sender",
        "z": "69435a82deadf679",
        "name": "Send to Door2MART bot",
        "bot": "3769e6e473aff07c",
        "haserroroutput": false,
        "outputs": 1,
        "x": 910,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "139ddfcad628c716",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Warn stranger",
        "func": "const low_hour = flow.get(\"low_hour\");\nconst high_hour = flow.get(\"high_hour\");\nconst pir_state = msg.payload[2];\n//let warning_status = flow.get(\"warning_status\");\nif (pir_state === '0') return msg;\n\nlet curr = new Date();\nlet curr_date = curr.toLocaleString().split(', ')[0];\n\nlet start = low_hour, end = high_hour;\nif (low_hour > 12) start = `${start - 12}:00:00 PM`;\nelse start += ':00:00 AM';\nstart = `${curr_date}, ${start}`\nif (high_hour > 12) end = `${end - 12}:00:00 PM`;\nelse end += ':00:00 AM';\nif (low_hour > high_hour) {\n    curr_date = new Date(curr.getTime());\n    curr_date.setDate(curr_date.getDate() + 1);\n    curr_date = curr_date.toLocaleString().split(', ')[0];\n}\nend = `${curr_date}, ${end}`;\n\nif (new Date(start).getTime() <= curr.getTime()\n    && curr.getTime() <= new Date(end).getTime()) {\n    msg.payload = {\n        \"type\": \"message\",\n        \"chatId\": \"-1001652896051\",\n        \"content\": `ALERT! Stranger's at the door!\n        Currently ${curr.toLocaleString()}!`\n    };\n    //flow.set(\"warning_status\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "a8dc661bc252f52b"
            ]
        ]
    },
    {
        "id": "e34c7b54fdba1b20",
        "type": "e-mail",
        "z": "69435a82deadf679",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send to emails",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "9d46d9226c3bd980",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Warn stranger (Email)",
        "func": "const low_hour = flow.get(\"low_hour\");\nconst high_hour = flow.get(\"high_hour\");\nconst emails = flow.get(\"emails\");\nconst pir_state = msg.payload[2];\nlet warning_status = flow.get(\"warning_status\");\n\nif (pir_state === '0') return msg;\n\nlet curr = new Date();\nlet curr_date = curr.toLocaleString().split(', ')[0];\n\nlet start = low_hour, end = high_hour;\nif (low_hour > 12) start = `${start - 12}:00:00 PM`;\nelse start += ':00:00 AM';\nstart = `${curr_date}, ${start}`\nif (high_hour > 12) end = `${end - 12}:00:00 PM`;\nelse end += ':00:00 AM';\nif (low_hour > high_hour) {\n    curr_date = new Date(curr.getTime());\n    curr_date.setDate(curr_date.getDate() + 1);\n    curr_date = curr_date.toLocaleString().split(', ')[0];\n}\nend = `${curr_date}, ${end}`;\n\nif (warning_status == 1\n    && new Date(start).getTime() <= curr.getTime()\n    && curr.getTime() <= new Date(end).getTime()) {\n    msg = {\n        payload: `ALERT! Stranger's at the door!\n        Currently ${curr.toLocaleString()}!`,\n        topic: \"ALERT STRANGER!\",\n        to: emails\n    };\n    flow.set(\"warning_status\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "e34c7b54fdba1b20"
            ]
        ]
    },
    {
        "id": "7d935510a0893683",
        "type": "firebase-get",
        "z": "69435a82deadf679",
        "name": "GET users",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "users",
        "pathType": "str",
        "useConstraint": false,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "a7dbb810c0c1c122"
            ]
        ]
    },
    {
        "id": "a7dbb810c0c1c122",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Filter emails",
        "func": "var data = msg.payload;\nvar emails = [];\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        if (propValue.email.length > 0)\n            emails.push(propValue.email);\n    }\n}\n\nflow.set(\"emails\", emails.join(', '));\nmsg.payload = flow.get(\"emails\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "14c8766205c4a22c",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Warn temperature (Email)",
        "func": "let temp = msg.payload[0];\nlet emails = flow.get(\"emails\");\nlet warning_status = flow.get(\"warning_status\");\nif (temp > 70 && warning_status == 1) {\n    msg = {\n        payload: `Temperature is TOO HIGH!\n        Going over ${temp} ℃!`,\n        topic: \"ALERT TEMPERATURE!\",\n        to: emails\n    };\n    flow.set(\"warning_status\", 0);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "e34c7b54fdba1b20"
            ]
        ]
    },
    {
        "id": "3760905e949739a8",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set delay time",
        "func": "flow.set(\"warning_status\", 1);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "fb26aeeff08ff698",
        "type": "switch",
        "z": "69435a82deadf679",
        "name": "",
        "property": "warning_status",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "14c8766205c4a22c",
                "9d46d9226c3bd980"
            ],
            []
        ]
    },
    {
        "id": "49ebc27e8a29c516",
        "type": "inject",
        "z": "69435a82deadf679",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "3760905e949739a8"
            ]
        ]
    },
    {
        "id": "277df9b60e48b88e",
        "type": "mqtt in",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/PASSDOOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ae6d4969bfabe804",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 980,
        "wires": [
            [
                "bf41cb3d5268dc98",
                "fc586675f6ccde1a"
            ]
        ]
    },
    {
        "id": "bf41cb3d5268dc98",
        "type": "firebase-get",
        "z": "69435a82deadf679",
        "name": "GET pass_clock",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "pass_clock",
        "pathType": "str",
        "useConstraint": false,
        "x": 420,
        "y": 980,
        "wires": [
            [
                "2c24d4237fca5c45"
            ]
        ]
    },
    {
        "id": "2c24d4237fca5c45",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Check validpass_clock",
        "func": "var data = msg.payload\nvar username = global.get(\"username_value\")\nvar password = flow.get(\"temp_pass\")\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        if (username == propValue.username) {\n            if(password == propValue.password_lock) {\n                msg.payload = 1 // True\n                return msg;\n            } \n        }\n    }\n}\n\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "fec3a3698bc34726"
            ]
        ]
    },
    {
        "id": "fec3a3698bc34726",
        "type": "switch",
        "z": "69435a82deadf679",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 980,
        "wires": [
            [],
            [
                "29338a93b42c6fe2"
            ]
        ]
    },
    {
        "id": "fc586675f6ccde1a",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Store temp password",
        "func": "flow.set(\"temp_pass\", msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a0abe5c0f38e3fb0",
        "type": "mqtt out",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/LOCK",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae6d4969bfabe804",
        "x": 1200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "29338a93b42c6fe2",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set payload",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1020,
        "wires": [
            [
                "a0abe5c0f38e3fb0"
            ]
        ]
    },
    {
        "id": "ca265de36496fe95",
        "type": "mqtt in",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/FINGERPRINT",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ae6d4969bfabe804",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "866406e611fbca7a"
            ]
        ]
    },
    {
        "id": "866406e611fbca7a",
        "type": "switch",
        "z": "69435a82deadf679",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 1100,
        "wires": [
            [],
            [
                "1a3d3855f0fc45d4"
            ]
        ]
    },
    {
        "id": "aeb0f313298471e6",
        "type": "mqtt out",
        "z": "69435a82deadf679",
        "name": "",
        "topic": "21CLC05N02/LOCK",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae6d4969bfabe804",
        "x": 800,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1a3d3855f0fc45d4",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set payload",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "aeb0f313298471e6"
            ]
        ]
    },
    {
        "id": "c81daa80918ddf3d",
        "type": "ui_slider",
        "z": "69435a82deadf679",
        "name": "Start Hour",
        "label": "Start Hour",
        "tooltip": "",
        "group": "8139ada5ac830901",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "24",
        "step": 1,
        "className": "",
        "x": 530,
        "y": 800,
        "wires": [
            [
                "bc756652055e69ea"
            ]
        ]
    },
    {
        "id": "bc756652055e69ea",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set low_hour",
        "func": "flow.set(\"low_hour\", msg.payload);\nmsg.key = \"time_alert\";\nmsg.payload = {\n    low_hour: flow.get(\"low_hour\")\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 800,
        "wires": [
            [
                "992e892bfee73d23"
            ]
        ]
    },
    {
        "id": "065dec0bf1a8da30",
        "type": "ui_slider",
        "z": "69435a82deadf679",
        "name": "End Hour",
        "label": "End Hour",
        "tooltip": "",
        "group": "8139ada5ac830901",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "24",
        "step": 1,
        "className": "",
        "x": 520,
        "y": 880,
        "wires": [
            [
                "7792bec837a8e59a"
            ]
        ]
    },
    {
        "id": "7792bec837a8e59a",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set high_hour",
        "func": "flow.set(\"high_hour\", msg.payload);\nmsg.key = \"time_alert\";\nmsg.payload = {\n    high_hour: flow.get(\"high_hour\")\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 880,
        "wires": [
            [
                "5d4058d4cf22df3c"
            ]
        ]
    },
    {
        "id": "992e892bfee73d23",
        "type": "firebase-out",
        "z": "69435a82deadf679",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "key",
        "pathType": "msg",
        "priority": 1,
        "queryType": "update",
        "x": 920,
        "y": 800,
        "wires": []
    },
    {
        "id": "5d4058d4cf22df3c",
        "type": "firebase-out",
        "z": "69435a82deadf679",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "key",
        "pathType": "msg",
        "priority": 1,
        "queryType": "update",
        "x": 920,
        "y": 880,
        "wires": []
    },
    {
        "id": "691d80a0bbd3d066",
        "type": "inject",
        "z": "69435a82deadf679",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "1cc71dd4716b5f49"
            ]
        ]
    },
    {
        "id": "1cc71dd4716b5f49",
        "type": "firebase-get",
        "z": "69435a82deadf679",
        "name": "GET time_alert",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "time_alert",
        "pathType": "str",
        "useConstraint": false,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "670ff4f1939564d3"
            ]
        ]
    },
    {
        "id": "670ff4f1939564d3",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Set time alert",
        "func": "flow.set(\"low_hour\", msg.payload.low_hour);\nflow.set(\"high_hour\", msg.payload.high_hour);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e4f878b974c78e6b",
        "type": "inject",
        "z": "69435a82deadf679",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "a2ef4597b94fd165",
                "aa35466fd644c0a0"
            ]
        ]
    },
    {
        "id": "a2ef4597b94fd165",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Init low_hour slider",
        "func": "msg.payload = flow.get(\"low_hour\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 800,
        "wires": [
            [
                "c81daa80918ddf3d"
            ]
        ]
    },
    {
        "id": "aa35466fd644c0a0",
        "type": "function",
        "z": "69435a82deadf679",
        "name": "Init high_hour slider",
        "func": "msg.payload = flow.get(\"high_hour\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 880,
        "wires": [
            [
                "065dec0bf1a8da30"
            ]
        ]
    },
    {
        "id": "e5713d73e96aac4d",
        "type": "firebase-get",
        "z": "bb2de6a45f4ff3ce",
        "name": "GET door_status",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "door_status",
        "pathType": "str",
        "useConstraint": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "30a96c61e2a4d3ac"
            ]
        ]
    },
    {
        "id": "de08c692fce67967",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "GET door_user",
        "func": "let statuses = flow.get(\"door_statuses\");\nconst users = Array.from(\n    new Set(statuses.map(stat => stat.username))\n).sort();\nmsg.options = users;\nflow.set(\"users\", users);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "110aa4e0525f728d"
            ]
        ]
    },
    {
        "id": "8b96be79cf14fa5b",
        "type": "ui_date_picker",
        "z": "bb2de6a45f4ff3ce",
        "name": "Door_date",
        "label": "Date for door status",
        "group": "2a2f5469748d4a07",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "door_date",
        "topicType": "msg",
        "className": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "c1a88ea816eefa2d"
            ]
        ]
    },
    {
        "id": "fad0e7de20ebbc98",
        "type": "ui_dropdown",
        "z": "bb2de6a45f4ff3ce",
        "name": "Door_action",
        "label": "Action",
        "tooltip": "",
        "place": "Action",
        "group": "2a2f5469748d4a07",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Lock",
                "value": "close",
                "type": "str"
            },
            {
                "label": "Unlock",
                "value": "open",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_action",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "fcd71fff8ec6e069"
            ]
        ]
    },
    {
        "id": "110aa4e0525f728d",
        "type": "ui_dropdown",
        "z": "bb2de6a45f4ff3ce",
        "name": "Door_user",
        "label": "User",
        "tooltip": "",
        "place": "User",
        "group": "2a2f5469748d4a07",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "door_user",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "4191c1653b29fed4"
            ]
        ]
    },
    {
        "id": "30a96c61e2a4d3ac",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Filter door_status",
        "func": "let data = msg.payload;\nlet max_entries = 10;\nlet statuses = [];\n\nfor (let stat in data)\n    if (max_entries-- && data.hasOwnProperty(stat))\n        statuses.push(data[stat]);\n\nflow.set(\"door_statuses\", statuses);\nflow.set(\"door_actions\", []);\nflow.set(\"door_users\", []);\nmsg.payload = statuses;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "0e4dfdb910fcf886",
        "type": "ui_template",
        "z": "bb2de6a45f4ff3ce",
        "group": "2a2f5469748d4a07",
        "name": "Door status table",
        "order": 4,
        "width": 8,
        "height": 5,
        "format": "<table>\n    <tr>\n        <th>Time</th>\n        <th>Action</th>\n        <th>User</th>\n    </tr>\n    <tr ng-repeat=\"stat in msg.payload | orderBy:'time':true\">\n        <td>{{stat.time}}</td>\n        <td>{{stat.status}}</td>\n        <td>{{stat.username}}</td>\n    </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4191c1653b29fed4",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Filter door_user",
        "func": "// let users = msg.payload\n// if (!users.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => users.includes(stat.username));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_users\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "55bd4d11dcb1b0b7",
        "type": "complete",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "scope": [
            "30a96c61e2a4d3ac"
        ],
        "uncaught": false,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "de08c692fce67967"
            ]
        ]
    },
    {
        "id": "50faabae6a04233d",
        "type": "complete",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "scope": [
            "30a96c61e2a4d3ac",
            "4191c1653b29fed4",
            "fcd71fff8ec6e069",
            "c1a88ea816eefa2d"
        ],
        "uncaught": false,
        "x": 110,
        "y": 320,
        "wires": [
            [
                "9a69bfb7bea4b4f4"
            ]
        ]
    },
    {
        "id": "9a69bfb7bea4b4f4",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Filter display_statuses",
        "func": "let ddate = flow.get(\"door_date\");\nlet actions = flow.get(\"door_actions\") || [\"close\", \"open\"];\nlet users = flow.get(\"door_users\") || flow.get(\"users\") || [];\nlet statuses = flow.get(\"door_statuses\");\n\nif (statuses && Array.isArray(statuses)) {\n    msg.payload = statuses.filter(stat =>\n        ddate === stat.time.split(',')[0]\n        && actions.includes(stat.status)\n        && users.includes(stat.username));\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "0e4dfdb910fcf886"
            ]
        ]
    },
    {
        "id": "fcd71fff8ec6e069",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Filter door_action",
        "func": "// let actions = msg.payload\n// if (!actions.length) {\n//     msg.payload = flow.get(\"door_statuses\");\n//     flow.set(\"display_statuses\", msg.payload);\n//     return msg;\n// }\n// let statuses = flow.get(\"door_statuses\");\n// msg.payload = statuses.filter(stat => actions.includes(stat.status));\n// flow.set(\"display_statuses\", msg.payload);\n// return msg;\nflow.set(\"door_actions\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c1a88ea816eefa2d",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Filter door_date",
        "func": "if (!msg.payload) msg.payload = Date.now();\nlet ddate = new Date(msg.payload).toLocaleString();\nddate = ddate.split(',')[0];\nmsg.payload = ddate;\nflow.set(\"door_date\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "65549408d2ea35f4",
        "type": "ui_button",
        "z": "bb2de6a45f4ff3ce",
        "name": "Refresh",
        "group": "2a2f5469748d4a07",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "e5713d73e96aac4d"
            ]
        ]
    },
    {
        "id": "4cef0dfca078a660",
        "type": "firebase-out",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "password",
        "pathType": "msg",
        "priority": 1,
        "queryType": "update",
        "x": 1300,
        "y": 540,
        "wires": []
    },
    {
        "id": "aa77142342325107",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Get data",
        "func": "msg.payload = {\n    username: global.get(\"username_value\"),\n    password_lock: flow.get(\"pass_lock\")\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 480,
        "wires": [
            [
                "ee344d51b1a73f6c"
            ]
        ]
    },
    {
        "id": "4f1204df0c0d74de",
        "type": "firebase-get",
        "z": "bb2de6a45f4ff3ce",
        "name": "GET pass_lock",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "pass_lock",
        "pathType": "str",
        "useConstraint": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "5fd139a1b0db3970"
            ]
        ]
    },
    {
        "id": "9bd4a61a4b4c41bd",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Update data",
        "func": "msg.password = \"pass_lock/\" + flow.get(\"pass_lock_key\")\n\nmsg.payload = {\n    username: global.get(\"username_value\"),\n    password_lock: flow.get(\"pass_lock\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 540,
        "wires": [
            [
                "4cef0dfca078a660"
            ]
        ]
    },
    {
        "id": "2b4dea22b6e068d8",
        "type": "ui_form",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "label": "Change password smart lock",
        "group": "b2e2a35785454e68",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "New password",
                "value": "password_lock",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "password_lock": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "4f1204df0c0d74de",
                "5ce843aee37af7bd"
            ]
        ]
    },
    {
        "id": "ee344d51b1a73f6c",
        "type": "firebase-out",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "database": "af63f5a1d62c4c0f",
        "path": "pass_lock",
        "pathType": "str",
        "priority": 1,
        "queryType": "push",
        "x": 1310,
        "y": 480,
        "wires": []
    },
    {
        "id": "a56c7615802528c9",
        "type": "switch",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 500,
        "wires": [
            [
                "aa77142342325107"
            ],
            [
                "9bd4a61a4b4c41bd"
            ]
        ]
    },
    {
        "id": "5fd139a1b0db3970",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Check if exists pass_lock",
        "func": "var data = msg.payload\nvar username = global.get(\"username_value\")\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        if (username == propValue.username) {\n            flow.set(\"pass_lock_key\", propName);\n            msg.payload = 1 // True\n            return msg;\n        }\n    }\n}\n\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            [
                "a56c7615802528c9"
            ]
        ]
    },
    {
        "id": "5ce843aee37af7bd",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "name": "Store pass_lock",
        "func": "flow.set(\"pass_lock\", msg.payload.password_lock)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "747e748fcdc5e071",
        "type": "inject",
        "z": "bb2de6a45f4ff3ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "8b96be79cf14fa5b",
                "e5713d73e96aac4d"
            ]
        ]
    },
    {
        "id": "94dbb4d4626b56f6",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "Filter data",
        "func": "var data = msg.payload;\nvar username_value = global.get(\"username_value\");\nvar dataLocks = []\nvar users = [];\n\nfor (var propName in data) {\n    if (data.hasOwnProperty(propName)) {\n        var propValue = data[propName];\n        if(propValue.username == username_value) {\n            dataLocks.push(propValue.time)\n        }\n    }\n}\n\nmsg.payload = dataLocks\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 720,
        "wires": [
            [
                "0a16da4a3a3c7405"
            ]
        ]
    },
    {
        "id": "ca6e5954d80f45b3",
        "type": "ui_chart",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "",
        "group": "fb585a70cdebba93",
        "order": 2,
        "width": 10,
        "height": 6,
        "label": "12-Month Lock/Unlock",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "0a16da4a3a3c7405",
        "type": "function",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "12-Month Lock/Unlock Data",
        "func": "var lockData = []\nvar data = msg.payload\nvar freMonth = new Array(12).fill(0);\n\nfor (var i = 0; i < data.length; i++) {\n    var dateString = data[i];\n    var date = new Date(dateString);\n    var month = date.getMonth();\n    freMonth[month]++;\n}\n\nconst months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n]\n\nfor (var i = 0; i < months.length; i++) {\n    const dataSet = {\n        \"lock\": freMonth[i],\n        \"month\": months[i]\n    }\n    lockData.push(dataSet)\n}\n\nmsg.payload = lockData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 720,
        "wires": [
            [
                "cc18e4671e2d678e"
            ]
        ]
    },
    {
        "id": "cc18e4671e2d678e",
        "type": "split",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 720,
        "wires": [
            [
                "6d33e670063e8b47"
            ]
        ]
    },
    {
        "id": "6d33e670063e8b47",
        "type": "change",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.month",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.lock",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 680,
        "wires": [
            [
                "ca6e5954d80f45b3"
            ]
        ]
    },
    {
        "id": "8090d1b38fd1417d",
        "type": "ui_button",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "",
        "group": "fb585a70cdebba93",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Show Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "Green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "78790d49c4fda81d"
            ]
        ]
    },
    {
        "id": "712ddd83c63dc9eb",
        "type": "ui_button",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "",
        "group": "fb585a70cdebba93",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Clear Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 740,
        "wires": [
            [
                "ca6e5954d80f45b3"
            ]
        ]
    },
    {
        "id": "78790d49c4fda81d",
        "type": "firebase-get",
        "z": "bb2de6a45f4ff3ce",
        "g": "e6acc00a395957a5",
        "name": "GET door_status",
        "constraint": {},
        "database": "af63f5a1d62c4c0f",
        "outputType": "auto",
        "passThrough": false,
        "path": "door_status",
        "pathType": "str",
        "useConstraint": false,
        "x": 170,
        "y": 720,
        "wires": [
            [
                "94dbb4d4626b56f6"
            ]
        ]
    }
]